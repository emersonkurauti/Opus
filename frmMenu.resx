<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbMaximize.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACwwAAAsMAT9AIsgAAACDSURBVEhL7ZVRCoAgEEQVuladqON0IukYegj1ANssbEgh
        SUp97YP3ocIMfo35FSKycBrUStyVnPMSYwyQBg0ppVliC3hwcIfroJzhJLaASw83OXbDGZwlx4IWnGhB
        Ey1oogVNtKDJU8G3g8Mzhwf+RW0G3+irk8nwYN8GvMf66H+DMQdGwWjV+hTf+AAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pbLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>